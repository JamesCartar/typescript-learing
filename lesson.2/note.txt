Type annotations
Type annotations in TypeScript are lightweight ways to record the intended contract of the function or variable.
The term "lightweight" means that type annotations do not add runtime overhead. They are purely a compile-time feature and are removed when the code is transpiled to JavaScript, leaving the final output clean and efficient.

The goal of TypeScript is to be a static typechecker for JavaScript programs - in other words, a tool that runs before your code runs (static) and ensures that the types of the program are correct (typechecked).
Static types systems describe the shapes and behaviors of what our values will be when we run our programs. A type-checker like TypeScript uses that information and tells us when things might be going off the rails.
TypeScript takes tooling seriously, and that goes beyond completions and errors as you type. An editor that supports TypeScript can deliver “quick fixes” to automatically fix errors, refactorings to easily re-organize code, and useful navigation features for jumping to definitions of a variable, or finding all references to a given variable. 
